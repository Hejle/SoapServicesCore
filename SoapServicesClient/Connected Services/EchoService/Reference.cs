//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EchoService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EchoMessage", Namespace="http://schemas.datacontract.org/2004/07/SoapServicesCore.ServiceContracts")]
    public partial class EchoMessage : object
    {
        
        private string TextField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text
        {
            get
            {
                return this.TextField;
            }
            set
            {
                this.TextField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EchoFault", Namespace="http://schemas.datacontract.org/2004/07/SoapServicesCore.ServiceContracts")]
    public partial class EchoFault : object
    {
        
        private string TextField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text
        {
            get
            {
                return this.TextField;
            }
            set
            {
                this.TextField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PingOutput", Namespace="http://schemas.datacontract.org/2004/07/SoapServicesCore.ServiceContracts")]
    public partial class PingOutput : object
    {
        
        private bool ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Result
        {
            get
            {
                return this.ResultField;
            }
            set
            {
                this.ResultField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EchoService.IEchoService")]
    public interface IEchoService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEchoService/Echo", ReplyAction="http://tempuri.org/IEchoService/EchoResponse")]
        System.Threading.Tasks.Task<EchoService.EchoResponse> EchoAsync(EchoService.EchoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEchoService/ComplexEcho", ReplyAction="http://tempuri.org/IEchoService/ComplexEchoResponse")]
        System.Threading.Tasks.Task<EchoService.ComplexEchoResponse> ComplexEchoAsync(EchoService.ComplexEchoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEchoService/FailEcho", ReplyAction="http://tempuri.org/IEchoService/FailEchoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EchoService.EchoFault), Action="http://tempuri.org/IEchoService/FailEchoEchoFaultFault", Name="EchoFault", Namespace="http://schemas.datacontract.org/2004/07/SoapServicesCore.ServiceContracts")]
        System.Threading.Tasks.Task<EchoService.FailEchoResponse> FailEchoAsync(EchoService.FailEchoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEchoService/Ping", ReplyAction="http://tempuri.org/IEchoService/PingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EchoService.EchoFault), Action="http://tempuri.org/IEchoService/PingEchoFaultFault", Name="EchoFault", Namespace="http://schemas.datacontract.org/2004/07/SoapServicesCore.ServiceContracts")]
        System.Threading.Tasks.Task<EchoService.PingResponse> PingAsync(EchoService.PingRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Echo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class EchoRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string text;
        
        public EchoRequest()
        {
        }
        
        public EchoRequest(string text)
        {
            this.text = text;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="EchoResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class EchoResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string EchoResult;
        
        public EchoResponse()
        {
        }
        
        public EchoResponse(string EchoResult)
        {
            this.EchoResult = EchoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ComplexEcho", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ComplexEchoRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public EchoService.EchoMessage text;
        
        public ComplexEchoRequest()
        {
        }
        
        public ComplexEchoRequest(EchoService.EchoMessage text)
        {
            this.text = text;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ComplexEchoResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ComplexEchoResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string ComplexEchoResult;
        
        public ComplexEchoResponse()
        {
        }
        
        public ComplexEchoResponse(string ComplexEchoResult)
        {
            this.ComplexEchoResult = ComplexEchoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FailEcho", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class FailEchoRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string text;
        
        public FailEchoRequest()
        {
        }
        
        public FailEchoRequest(string text)
        {
            this.text = text;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FailEchoResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class FailEchoResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string FailEchoResult;
        
        public FailEchoResponse()
        {
        }
        
        public FailEchoResponse(string FailEchoResult)
        {
            this.FailEchoResult = FailEchoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Ping", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PingRequest
    {
        
        public PingRequest()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PingResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PingResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public EchoService.PingOutput PingResult;
        
        public PingResponse()
        {
        }
        
        public PingResponse(EchoService.PingOutput PingResult)
        {
            this.PingResult = PingResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public interface IEchoServiceChannel : EchoService.IEchoService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public partial class EchoServiceClient : System.ServiceModel.ClientBase<EchoService.IEchoService>, EchoService.IEchoService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public EchoServiceClient() : 
                base(EchoServiceClient.GetDefaultBinding(), EchoServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IEchoService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }

        public EchoServiceClient(System.ServiceModel.Channels.Binding binding) :
        base(binding, EchoServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IEchoService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }


        public EchoServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(EchoServiceClient.GetBindingForEndpoint(endpointConfiguration), EchoServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public EchoServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(EchoServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public EchoServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(EchoServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public EchoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<EchoService.EchoResponse> EchoAsync(EchoService.EchoRequest request)
        {
            return base.Channel.EchoAsync(request);
        }
        
        public System.Threading.Tasks.Task<EchoService.ComplexEchoResponse> ComplexEchoAsync(EchoService.ComplexEchoRequest request)
        {
            return base.Channel.ComplexEchoAsync(request);
        }
        
        public System.Threading.Tasks.Task<EchoService.FailEchoResponse> FailEchoAsync(EchoService.FailEchoRequest request)
        {
            return base.Channel.FailEchoAsync(request);
        }
        
        public System.Threading.Tasks.Task<EchoService.PingResponse> PingAsync(EchoService.PingRequest request)
        {
            return base.Channel.PingAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IEchoService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                result.Security.Transport.ClientCredentialType = System.ServiceModel.HttpClientCredentialType.Certificate;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IEchoService))
            {
                return new System.ServiceModel.EndpointAddress("https://localhost:5001/EchoService.svc/EchoService");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return EchoServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IEchoService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return EchoServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IEchoService);
        }
        
        public enum EndpointConfiguration
        {
            BasicHttpBinding_IEchoService,
        }
    }
}
